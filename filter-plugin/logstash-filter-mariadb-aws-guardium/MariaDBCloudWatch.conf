input{
	cloudwatch_logs {
	#Mandatory arguments:
	#Insert the log group that is created for the data instance for example, /aws/rds/instance/mariadb-aws-database/audit
	log_group => ["<LOG_GROUP>"] #example: ["/aws/rds/instance/mariadb-aws-database/audit"]
	region => "<region>" #Region that has the DB,example: ap-south-1a
	codec => plain
	sincedb_path => "NUL"
	#Insert the access key and secret that has access to log group
	access_key_id => "<ACCESS_KEY>"
	secret_access_key => "<SECRET_ACCESS_KEY>"
	# type field, value should be same as used in filter part.
	type => "mariadb"
	event_filter => ''
	start_position => "end"
	#Insert the account id of the AWS account
	add_field => {"account_id" => "<ACCOUNT_ID>"}
	}
} 
filter{
if [type] == "mariadb"{
    
# User can modify below filter to ignore system generated logs. Example: "select 1" in [message]
if "select 1" in [message] or "set autocommit" in [message] or "SET autocommit" in [message] or "SHOW INDEX FROM" in [message] or "set @@SQL_SELECT_LIMIT" in [message] or "SELECT @@tx_isolation" in [message] or "select @@lower_case_table_names" in [message] or "COMMIT" in [message] or "ROLLBACK" in [message] or "USE `" in [message] or "use `" in [message] or "SHOW FULL" in [message] or "SHOW PROCEDURE STATUS" in [message] or "SHOW FUNCTION STATUS" in [message] or "SELECT DATABASE()" in [message] or "use" in [message] or "SHOW COLLATION" in [message] or "SHOW WARNINGS" in [message] or "select @@" in [message] or "SET GLOBAL" in [message] or "SET NAMES" in [message] or "SET character_set_results" in [message] or "SHOW SESSION VARIABLES LIKE" in [message] or "SELECT current_user()" in [message]{
drop{}
}
grok
{
match => {"message" => "(?<timestamp>[^[A-Z][a-z]]*),(?<serverhost>[^\s]*),(?<username>[^\s]*),(?<hostname>[^\s]*),(?<connectionid>[^\s]*),(?<queryid>[^\s]*),(?<operation>[^\s]*),(?<database>[^\s]*),(?:%{GREEDYDATA:object}),(?<retcode>[^\s]*)"}
}
if "QUERY" == [operation] and "0" == [retcode] and ![database] and "create database" not in [message]{
drop{}
}
if "FAILED_CONNECT" == [operation] and "0" == [queryid] and ![username]{
drop{}
}
mutate {
add_field=> { "serverHostNamePrefix" => "%{account_id}_%{[cloudwatch_logs][log_stream]}" }
add_field=> { "dbNamePrefix" => "%{account_id}:%{[cloudwatch_logs][log_stream]}" }
}
awsmariadb_guardium_filter{}
}
}
output {
stdout { codec => rubydebug }
}

