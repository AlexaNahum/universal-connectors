input
	{
		azure_event_hubs 
			{
				config_mode => "basic"
				#Insert primary connection string from shared access policies in event hub from azure portal
				event_hub_connections => [<connection_string>]
				initial_position => "end"
				threads => 8
				decorate_events => true
				consumer_group => "$Default" 
				type => "azure_event_hub"
				#Insert your enrollmentId of azure account
				add_field => {"enrollmentId" => <enrollmentId>}	
			}
	}
	
filter
	{	
		  if [type] == "azure_event_hub"
		{
			json 
				{
					source => "message"   
			    }
            split
				{
					field => "records"
				}
			mutate  
				{
					add_field => {"pre_fix" => "%{[records][properties][prefix]}"}
					add_field => {"tempmessage" => "%{[records][properties][message]}"}
					add_field => {"e_level" => "%{[records][properties][errorLevel]}"} 
					add_field => {"server_instance_name" => "%{[records][LogicalServerName]}"}
				}
			grok 
				{
					match => { "pre_fix" => "(?<timestamp>[^[A-Z]]*)[A-Z]{3}:(?<client_ip>[^:]*):(?<db_user>[^@]*)@(?<db_name>[^:]*):\[(?<session_id>[^\]]*)\]:(?<app_name>[^:]*):(?<sql_state>[^:]*)"
							} 
				}		
			if [db_name]
				{
					mutate 
						{
							replace => { "db_name"=> "%{enrollmentId}:%{server_instance_name}:%{db_name}" }
						}
				}
			mutate
				{
					add_field => { "server_hostname" => "%{enrollmentId}_%{server_instance_name}" }
				}
		
			if [client_ip]
				{
					grok { match => {client_ip => "(?<clientIP>[^(]*)\((?<clientPort>[^)]*)"} }	
				}
			if[e_level] == "LOG"
				{
					if[tempmessage] =~ "FUNCTION"
						{
							grok{
									match => { "tempmessage" => "(?<audit>[^:]*):(?<session>[^:]*),%{GREEDYDATA:statement};%{GREEDYDATA:state}"}
								}
						}
					else{
							grok{
									match => { "tempmessage" => "(?<audit>[^:]*):(?<session>[^:]*),,%{GREEDYDATA:statement},%{GREEDYDATA:state}"}
								}
						}
				if[statement]
					{
						mutate	{
									gsub => ["statement","\"",""]			
								}
					}
				}
			if[e_level] == "ERROR"
				{
					if[tempmessage]
						{
							mutate 
							{
								gsub => ["tempmessage","\"",""]		
							}
						}
				}
			if[e_level] == "FATAL"
				{
					if[tempmessage]
						{
							mutate
							{
								gsub => ["tempmessage","\"",""]
							}
						}
				}
			if[pre_fix] =~ "azure_superuser"
				{
					drop {}
				}	
			else{
					azure_postgresql_guardium_plugin_filter{}
				}
			mutate  {
						remove_field => ["@version","type","@timestamp","sequence","host", "records","ResourceGroup","resourceId","operationName","SubscriptionId","time","category","properties","pre_fix","db_user","timestamp","db_name","session_id","clientIP","clientPort","statement","sql_state","client_ip","session","server_instance_name","enrollmentId","state","tempmessage","message","e_level","audit","server_hostname","app_name"] 
					}
		}  
	}